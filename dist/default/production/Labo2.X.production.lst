

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Aug 29 01:44:16 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Version 2.20
    20                           ; Generated 05/05/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F25K80 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _LATCbits	set	3979
    54   000000                     _LATAbits	set	3977
    55   000000                     _WPUB	set	3931
    56   000000                     _ANCON1	set	3932
    57   000000                     _ANCON0	set	3933
    58   000000                     _LATA	set	3977
    59   000000                     _REFOCON	set	3994
    60   000000                     _OSCTUNE	set	3995
    61   000000                     _OSCCON2	set	4050
    62   000000                     _OSCCON	set	4051
    63   000000                     _INTCON2bits	set	4081
    64   000000                     _TRISA	set	3986
    65   000000                     _LATC	set	3979
    66   000000                     _LATB	set	3978
    67   000000                     _TRISC	set	3988
    68   000000                     _TRISB	set	3987
    69   000000                     _PORTBbits	set	3969
    70   000000                     _INTCONbits	set	4082
    71   000000                     _PORTCbits	set	3970
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76   007DFE                     __pcinit:
    77                           	callstack 0
    78   007DFE                     start_initialization:
    79                           	callstack 0
    80   007DFE                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (2 bytes)
    84   007DFE  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85   007E00  6A0B               	clrf	__pbssCOMRAM& (0+255),c
    86   007E02                     end_of_initialization:
    87                           	callstack 0
    88   007E02                     __end_of__initialization:
    89                           	callstack 0
    90   007E02  0E00               	movlw	low (__Lmediumconst shr (0+16))
    91   007E04  6EF8               	movwf	tblptru,c
    92   007E06  0100               	movlb	0
    93   007E08  EF9C  F03F         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	bssCOMRAM
    96   00000B                     __pbssCOMRAM:
    97                           	callstack 0
    98   00000B                     _var_compteur:
    99                           	callstack 0
   100   00000B                     	ds	2
   101                           
   102                           	psect	cstackCOMRAM
   103   000001                     __pcstackCOMRAM:
   104                           	callstack 0
   105   000001                     cligne@nb:
   106                           	callstack 0
   107   000001                     afficheur@var_compteur:
   108                           	callstack 0
   109                           
   110                           ; 2 bytes @ 0x0
   111   000001                     	ds	2
   112   000003                     ??_cligne:
   113   000003                     ??_afficheur:
   114                           
   115                           ; 1 bytes @ 0x2
   116   000003                     	ds	2
   117   000005                     cligne@i:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x4
   121   000005                     	ds	2
   122   000007                     ??_main:
   123                           
   124                           ; 1 bytes @ 0x6
   125   000007                     	ds	2
   126   000009                     main@maintien:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x8
   130   000009                     	ds	2
   131                           
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 57 in file "main.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;  maintien        2    8[COMRAM] unsigned int 
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK11  BANK1
      +2  BANK13  BANK10  BANK14
   151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   152 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   154 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   155 ;;Total ram usage:        4 bytes
   156 ;; Hardware stack levels required when called: 2
   157 ;; This function calls:
   158 ;;		_SYSTEM_Initialize
   159 ;;		_afficheur
   160 ;;		_cligne
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text0
   167   007F38                     __ptext0:
   168                           	callstack 0
   169   007F38                     _main:
   170                           	callstack 29
   171   007F38                     
   172                           ;main.c: 59:      SYSTEM_Initialize();
   173   007F38  ECFA  F03E         	call	_SYSTEM_Initialize	;wreg free
   174   007F3C                     
   175                           ;main.c: 61:      unsigned maintien=0;
   176   007F3C  0E00               	movlw	0
   177   007F3E  6E0A               	movwf	(main@maintien+1)^0,c
   178   007F40  0E00               	movlw	0
   179   007F42  6E09               	movwf	main@maintien^0,c
   180   007F44                     
   181                           ;main.c: 63:      cligne (5);
   182   007F44  0E00               	movlw	0
   183   007F46  6E02               	movwf	(cligne@nb+1)^0,c
   184   007F48  0E05               	movlw	5
   185   007F4A  6E01               	movwf	cligne@nb^0,c
   186   007F4C  EC23  F03F         	call	_cligne	;wreg free
   187   007F50                     l914:
   188                           
   189                           ;main.c: 66:          if (PORTBbits.RB0==0) {
   190   007F50  B081               	btfsc	129,0,c	;volatile
   191   007F52  EFAD  F03F         	goto	u81
   192   007F56  EFAF  F03F         	goto	u80
   193   007F5A                     u81:
   194   007F5A  EFF6  F03F         	goto	l934
   195   007F5E                     u80:
   196   007F5E                     
   197                           ;main.c: 67:              if (maintien == 0) {
   198   007F5E  5009               	movf	main@maintien^0,w,c
   199   007F60  100A               	iorwf	(main@maintien+1)^0,w,c
   200   007F62  A4D8               	btfss	status,2,c
   201   007F64  EFB6  F03F         	goto	u91
   202   007F68  EFB8  F03F         	goto	u90
   203   007F6C                     u91:
   204   007F6C  EFA8  F03F         	goto	l914
   205   007F70                     u90:
   206   007F70                     
   207                           ;main.c: 68:                  afficheur(var_compteur);
   208   007F70  C00B  F001         	movff	_var_compteur,afficheur@var_compteur
   209   007F74  C00C  F002         	movff	_var_compteur+1,afficheur@var_compteur+1
   210   007F78  EC4F  F03F         	call	_afficheur	;wreg free
   211   007F7C                     
   212                           ;main.c: 69:                  var_compteur++;
   213   007F7C  4A0B               	infsnz	_var_compteur^0,f,c
   214   007F7E  2A0C               	incf	(_var_compteur+1)^0,f,c
   215   007F80                     
   216                           ;main.c: 70:                  if (var_compteur > 5) {
   217   007F80  BE0C               	btfsc	(_var_compteur+1)^0,7,c
   218   007F82  EFCC  F03F         	goto	u101
   219   007F86  500C               	movf	(_var_compteur+1)^0,w,c
   220   007F88  E109               	bnz	u100
   221   007F8A  0E06               	movlw	6
   222   007F8C  5C0B               	subwf	_var_compteur^0,w,c
   223   007F8E  A0D8               	btfss	status,0,c
   224   007F90  EFCC  F03F         	goto	u101
   225   007F94  EFCE  F03F         	goto	u100
   226   007F98                     u101:
   227   007F98  EFD2  F03F         	goto	l926
   228   007F9C                     u100:
   229   007F9C                     
   230                           ;main.c: 71:                      var_compteur = 0;
   231   007F9C  0E00               	movlw	0
   232   007F9E  6E0C               	movwf	(_var_compteur+1)^0,c
   233   007FA0  0E00               	movlw	0
   234   007FA2  6E0B               	movwf	_var_compteur^0,c
   235   007FA4                     l926:
   236                           
   237                           ;main.c: 73:                  _delay((unsigned long)((250)*(20000000/4000.0)));
   238   007FA4  0E07               	movlw	7
   239   007FA6  6E08               	movwf	(??_main+1)^0,c
   240   007FA8  0E58               	movlw	88
   241   007FAA  6E07               	movwf	??_main^0,c
   242   007FAC  0E5A               	movlw	90
   243   007FAE                     u127:
   244   007FAE  2EE8               	decfsz	wreg,f,c
   245   007FB0  D7FE               	bra	u127
   246   007FB2  2E07               	decfsz	??_main^0,f,c
   247   007FB4  D7FC               	bra	u127
   248   007FB6  2E08               	decfsz	(??_main+1)^0,f,c
   249   007FB8  D7FA               	bra	u127
   250   007FBA                     
   251                           ;main.c: 74:                  if (maintien == 1) {
   252   007FBA  0409               	decf	main@maintien^0,w,c
   253   007FBC  100A               	iorwf	(main@maintien+1)^0,w,c
   254   007FBE  A4D8               	btfss	status,2,c
   255   007FC0  EFE4  F03F         	goto	u111
   256   007FC4  EFE6  F03F         	goto	u110
   257   007FC8                     u111:
   258   007FC8  EFFC  F03F         	goto	l74
   259   007FCC                     u110:
   260   007FCC                     
   261                           ;main.c: 75:                      var_compteur++;
   262   007FCC  4A0B               	infsnz	_var_compteur^0,f,c
   263   007FCE  2A0C               	incf	(_var_compteur+1)^0,f,c
   264   007FD0                     
   265                           ;main.c: 76:                      _delay((unsigned long)((1000)*(20000000/4000.0)));
   266   007FD0  0E1A               	movlw	26
   267   007FD2  6E08               	movwf	(??_main+1)^0,c
   268   007FD4  0E5E               	movlw	94
   269   007FD6  6E07               	movwf	??_main^0,c
   270   007FD8  0E6E               	movlw	110
   271   007FDA                     u137:
   272   007FDA  2EE8               	decfsz	wreg,f,c
   273   007FDC  D7FE               	bra	u137
   274   007FDE  2E07               	decfsz	??_main^0,f,c
   275   007FE0  D7FC               	bra	u137
   276   007FE2  2E08               	decfsz	(??_main+1)^0,f,c
   277   007FE4  D7FA               	bra	u137
   278   007FE6  D000               	nop2	
   279   007FE8  EFA8  F03F         	goto	l914
   280   007FEC                     l934:
   281                           
   282                           ;main.c: 82:              maintien = 0;
   283   007FEC  0E00               	movlw	0
   284   007FEE  6E0A               	movwf	(main@maintien+1)^0,c
   285   007FF0  0E00               	movlw	0
   286   007FF2  6E09               	movwf	main@maintien^0,c
   287   007FF4  EFA8  F03F         	goto	l914
   288   007FF8                     l74:
   289   007FF8  EFA8  F03F         	goto	l914
   290   007FFC  EF00  F000         	goto	start
   291   008000                     __end_of_main:
   292                           	callstack 0
   293                           
   294 ;; *************** function _cligne *****************
   295 ;; Defined at:
   296 ;;		line 90 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;  nb              2    0[COMRAM] unsigned int 
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  i               2    4[COMRAM] unsigned int 
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK11  BANK1
      +2  BANK13  BANK10  BANK14
   310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   313 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   314 ;;Total ram usage:        6 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		_main
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text1
   324   007E46                     __ptext1:
   325                           	callstack 0
   326   007E46                     _cligne:
   327                           	callstack 30
   328   007E46                     
   329                           ;main.c: 91:     for (unsigned i=0;i<nb;i++){
   330   007E46  0E00               	movlw	0
   331   007E48  6E06               	movwf	(cligne@i+1)^0,c
   332   007E4A  0E00               	movlw	0
   333   007E4C  6E05               	movwf	cligne@i^0,c
   334   007E4E  EF43  F03F         	goto	l80
   335   007E52                     l81:
   336                           
   337                           ;main.c: 92:         LATAbits.LATA5=1;
   338   007E52  8A89               	bsf	137,5,c	;volatile
   339   007E54                     
   340                           ;main.c: 93:         _delay((unsigned long)((200)*(20000000/4000.0)));
   341   007E54  0E06               	movlw	6
   342   007E56  6E04               	movwf	(??_cligne+1)^0,c
   343   007E58  0E13               	movlw	19
   344   007E5A  6E03               	movwf	??_cligne^0,c
   345   007E5C  0EAE               	movlw	174
   346   007E5E                     u147:
   347   007E5E  2EE8               	decfsz	wreg,f,c
   348   007E60  D7FE               	bra	u147
   349   007E62  2E03               	decfsz	??_cligne^0,f,c
   350   007E64  D7FC               	bra	u147
   351   007E66  2E04               	decfsz	(??_cligne+1)^0,f,c
   352   007E68  D7FA               	bra	u147
   353   007E6A                     
   354                           ;main.c: 94:         LATAbits.LATA5=0;
   355   007E6A  9A89               	bcf	137,5,c	;volatile
   356                           
   357                           ;main.c: 95:         _delay((unsigned long)((200)*(20000000/4000.0)));
   358   007E6C  0E06               	movlw	6
   359   007E6E  6E04               	movwf	(??_cligne+1)^0,c
   360   007E70  0E13               	movlw	19
   361   007E72  6E03               	movwf	??_cligne^0,c
   362   007E74  0EAE               	movlw	174
   363   007E76                     u157:
   364   007E76  2EE8               	decfsz	wreg,f,c
   365   007E78  D7FE               	bra	u157
   366   007E7A  2E03               	decfsz	??_cligne^0,f,c
   367   007E7C  D7FC               	bra	u157
   368   007E7E  2E04               	decfsz	(??_cligne+1)^0,f,c
   369   007E80  D7FA               	bra	u157
   370   007E82                     
   371                           ;main.c: 96:     }
   372   007E82  4A05               	infsnz	cligne@i^0,f,c
   373   007E84  2A06               	incf	(cligne@i+1)^0,f,c
   374   007E86                     l80:
   375   007E86  5001               	movf	cligne@nb^0,w,c
   376   007E88  5C05               	subwf	cligne@i^0,w,c
   377   007E8A  5002               	movf	(cligne@nb+1)^0,w,c
   378   007E8C  5806               	subwfb	(cligne@i+1)^0,w,c
   379   007E8E  A0D8               	btfss	status,0,c
   380   007E90  EF4C  F03F         	goto	u71
   381   007E94  EF4E  F03F         	goto	u70
   382   007E98                     u71:
   383   007E98  EF29  F03F         	goto	l81
   384   007E9C                     u70:
   385   007E9C  0012               	return		;funcret
   386   007E9E                     __end_of_cligne:
   387                           	callstack 0
   388                           
   389 ;; *************** function _afficheur *****************
   390 ;; Defined at:
   391 ;;		line 147 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  var_compteur    2    0[COMRAM] int 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK11  BANK1
      +2  BANK13  BANK10  BANK14
   405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   409 ;;Total ram usage:        4 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text2
   419   007E9E                     __ptext2:
   420                           	callstack 0
   421   007E9E                     _afficheur:
   422                           	callstack 30
   423   007E9E                     
   424                           ;main.c: 149:     switch (var_compteur) {
   425   007E9E  EF75  F03F         	goto	l902
   426   007EA2                     l98:
   427                           
   428                           ;main.c: 151:             LATAbits.LATA0=0;
   429   007EA2  9089               	bcf	137,0,c	;volatile
   430                           
   431                           ;main.c: 152:             LATAbits.LATA1=0;
   432   007EA4  9289               	bcf	137,1,c	;volatile
   433                           
   434                           ;main.c: 153:             LATAbits.LATA2=0;
   435   007EA6  9489               	bcf	137,2,c	;volatile
   436                           
   437                           ;main.c: 154:             LATAbits.LATA3=0;
   438   007EA8  9689               	bcf	137,3,c	;volatile
   439                           
   440                           ;main.c: 155:             break;
   441   007EAA  EF9B  F03F         	goto	l105
   442   007EAE                     l100:
   443                           
   444                           ;main.c: 158:             LATAbits.LATA0=1;
   445   007EAE  8089               	bsf	137,0,c	;volatile
   446                           
   447                           ;main.c: 159:             LATAbits.LATA1=0;
   448   007EB0  9289               	bcf	137,1,c	;volatile
   449                           
   450                           ;main.c: 160:             LATAbits.LATA2=0;
   451   007EB2  9489               	bcf	137,2,c	;volatile
   452                           
   453                           ;main.c: 161:             LATAbits.LATA3=0;
   454   007EB4  9689               	bcf	137,3,c	;volatile
   455                           
   456                           ;main.c: 162:             break;
   457   007EB6  EF9B  F03F         	goto	l105
   458   007EBA                     l101:
   459                           
   460                           ;main.c: 165:             LATAbits.LATA0=0;
   461   007EBA  9089               	bcf	137,0,c	;volatile
   462                           
   463                           ;main.c: 166:             LATAbits.LATA1=1;
   464   007EBC  8289               	bsf	137,1,c	;volatile
   465                           
   466                           ;main.c: 167:             LATAbits.LATA2=0;
   467   007EBE  9489               	bcf	137,2,c	;volatile
   468                           
   469                           ;main.c: 168:             LATAbits.LATA3=0;
   470   007EC0  9689               	bcf	137,3,c	;volatile
   471                           
   472                           ;main.c: 169:             break;
   473   007EC2  EF9B  F03F         	goto	l105
   474   007EC6                     l102:
   475                           
   476                           ;main.c: 172:             LATAbits.LATA0=1;
   477   007EC6  8089               	bsf	137,0,c	;volatile
   478                           
   479                           ;main.c: 173:             LATAbits.LATA1=1;
   480   007EC8  8289               	bsf	137,1,c	;volatile
   481                           
   482                           ;main.c: 174:             LATAbits.LATA2=0;
   483   007ECA  9489               	bcf	137,2,c	;volatile
   484                           
   485                           ;main.c: 175:             LATAbits.LATA3=0;
   486   007ECC  9689               	bcf	137,3,c	;volatile
   487                           
   488                           ;main.c: 176:             break;
   489   007ECE  EF9B  F03F         	goto	l105
   490   007ED2                     l103:
   491                           
   492                           ;main.c: 179:             LATAbits.LATA0=0;
   493   007ED2  9089               	bcf	137,0,c	;volatile
   494                           
   495                           ;main.c: 180:             LATAbits.LATA1=0;
   496   007ED4  9289               	bcf	137,1,c	;volatile
   497                           
   498                           ;main.c: 181:             LATAbits.LATA2=1;
   499   007ED6  8489               	bsf	137,2,c	;volatile
   500                           
   501                           ;main.c: 182:             LATAbits.LATA3=0;
   502   007ED8  9689               	bcf	137,3,c	;volatile
   503                           
   504                           ;main.c: 183:             break;
   505   007EDA  EF9B  F03F         	goto	l105
   506   007EDE                     l104:
   507                           
   508                           ;main.c: 186:             LATAbits.LATA0=1;
   509   007EDE  8089               	bsf	137,0,c	;volatile
   510                           
   511                           ;main.c: 187:             LATAbits.LATA1=0;
   512   007EE0  9289               	bcf	137,1,c	;volatile
   513                           
   514                           ;main.c: 188:             LATAbits.LATA2=1;
   515   007EE2  8489               	bsf	137,2,c	;volatile
   516                           
   517                           ;main.c: 189:             LATAbits.LATA3=0;
   518   007EE4  9689               	bcf	137,3,c	;volatile
   519                           
   520                           ;main.c: 190:             break;
   521   007EE6  EF9B  F03F         	goto	l105
   522   007EEA                     l902:
   523   007EEA  C001  F003         	movff	afficheur@var_compteur,??_afficheur
   524   007EEE  C002  F004         	movff	afficheur@var_compteur+1,??_afficheur+1
   525                           
   526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   527                           ; Switch size 1, requested type "simple"
   528                           ; Number of cases is 1, Range of values is 0 to 0
   529                           ; switch strategies available:
   530                           ; Name         Instructions Cycles
   531                           ; simple_byte            4     3 (average)
   532                           ;	Chosen strategy is simple_byte
   533   007EF2  5004               	movf	(??_afficheur+1)^0,w,c
   534   007EF4  0A00               	xorlw	0	; case 0
   535   007EF6  B4D8               	btfsc	status,2,c
   536   007EF8  EF80  F03F         	goto	l956
   537   007EFC  EF9B  F03F         	goto	l105
   538   007F00                     l956:
   539                           
   540                           ; Switch size 1, requested type "simple"
   541                           ; Number of cases is 6, Range of values is 0 to 5
   542                           ; switch strategies available:
   543                           ; Name         Instructions Cycles
   544                           ; simple_byte           19    10 (average)
   545                           ;	Chosen strategy is simple_byte
   546   007F00  5003               	movf	??_afficheur^0,w,c
   547   007F02  0A00               	xorlw	0	; case 0
   548   007F04  B4D8               	btfsc	status,2,c
   549   007F06  EF51  F03F         	goto	l98
   550   007F0A  0A01               	xorlw	1	; case 1
   551   007F0C  B4D8               	btfsc	status,2,c
   552   007F0E  EF57  F03F         	goto	l100
   553   007F12  0A03               	xorlw	3	; case 2
   554   007F14  B4D8               	btfsc	status,2,c
   555   007F16  EF5D  F03F         	goto	l101
   556   007F1A  0A01               	xorlw	1	; case 3
   557   007F1C  B4D8               	btfsc	status,2,c
   558   007F1E  EF63  F03F         	goto	l102
   559   007F22  0A07               	xorlw	7	; case 4
   560   007F24  B4D8               	btfsc	status,2,c
   561   007F26  EF69  F03F         	goto	l103
   562   007F2A  0A01               	xorlw	1	; case 5
   563   007F2C  B4D8               	btfsc	status,2,c
   564   007F2E  EF6F  F03F         	goto	l104
   565   007F32  EF9B  F03F         	goto	l105
   566   007F36                     l105:
   567   007F36  0012               	return		;funcret
   568   007F38                     __end_of_afficheur:
   569                           	callstack 0
   570                           
   571 ;; *************** function _SYSTEM_Initialize *****************
   572 ;; Defined at:
   573 ;;		line 50 in file "mcc_generated_files/mcc.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK11  BANK1
      +2  BANK13  BANK10  BANK14
   587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   591 ;;Total ram usage:        0 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; Hardware stack levels required when called: 1
   594 ;; This function calls:
   595 ;;		_OSCILLATOR_Initialize
   596 ;;		_PIN_MANAGER_Initialize
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text3
   603   007DF4                     __ptext3:
   604                           	callstack 0
   605   007DF4                     _SYSTEM_Initialize:
   606                           	callstack 29
   607   007DF4                     
   608                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   609   007DF4  EC0F  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   610                           
   611                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   612   007DF8  EC06  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   613   007DFC  0012               	return		;funcret
   614   007DFE                     __end_of_SYSTEM_Initialize:
   615                           	callstack 0
   616                           
   617 ;; *************** function _PIN_MANAGER_Initialize *****************
   618 ;; Defined at:
   619 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK11  BANK1
      +2  BANK13  BANK10  BANK14
   633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_SYSTEM_Initialize
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text4
   647   007E1E                     __ptext4:
   648                           	callstack 0
   649   007E1E                     _PIN_MANAGER_Initialize:
   650                           	callstack 29
   651   007E1E                     
   652                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   653   007E1E  0E00               	movlw	0
   654   007E20  6E89               	movwf	137,c	;volatile
   655                           
   656                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   657   007E22  0E00               	movlw	0
   658   007E24  6E8A               	movwf	138,c	;volatile
   659                           
   660                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   661   007E26  0E00               	movlw	0
   662   007E28  6E8B               	movwf	139,c	;volatile
   663                           
   664                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xC0;
   665   007E2A  0EC0               	movlw	192
   666   007E2C  6E92               	movwf	146,c	;volatile
   667   007E2E                     
   668                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   669   007E2E  6893               	setf	147,c	;volatile
   670                           
   671                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xC0;
   672   007E30  0EC0               	movlw	192
   673   007E32  6E94               	movwf	148,c	;volatile
   674                           
   675                           ;mcc_generated_files/pin_manager.c: 74:     ANCON0 = 0x1F;
   676   007E34  0E1F               	movlw	31
   677   007E36  010F               	movlb	15	; () banked
   678   007E38  6F5D               	movwf	93,b	;volatile
   679                           
   680                           ;mcc_generated_files/pin_manager.c: 75:     ANCON1 = 0x03;
   681   007E3A  0E03               	movlw	3
   682   007E3C  6F5C               	movwf	92,b	;volatile
   683                           
   684                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
   685   007E3E  0E00               	movlw	0
   686   007E40  6F5B               	movwf	91,b	;volatile
   687   007E42                     
   688                           ; BSR set to: 15
   689                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
   690   007E42  8EF1               	bsf	241,7,c	;volatile
   691   007E44                     
   692                           ; BSR set to: 15
   693   007E44  0012               	return		;funcret
   694   007E46                     __end_of_PIN_MANAGER_Initialize:
   695                           	callstack 0
   696                           
   697 ;; *************** function _OSCILLATOR_Initialize *****************
   698 ;; Defined at:
   699 ;;		line 57 in file "mcc_generated_files/mcc.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK11  BANK1
      +2  BANK13  BANK10  BANK14
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_SYSTEM_Initialize
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text5
   727   007E0C                     __ptext5:
   728                           	callstack 0
   729   007E0C                     _OSCILLATOR_Initialize:
   730                           	callstack 29
   731   007E0C                     
   732                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x60;
   733   007E0C  0E60               	movlw	96
   734   007E0E  6ED3               	movwf	211,c	;volatile
   735                           
   736                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x00;
   737   007E10  0E00               	movlw	0
   738   007E12  6ED2               	movwf	210,c	;volatile
   739                           
   740                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   741   007E14  0E00               	movlw	0
   742   007E16  6E9B               	movwf	155,c	;volatile
   743                           
   744                           ;mcc_generated_files/mcc.c: 66:     REFOCON = 0x00;
   745   007E18  0E00               	movlw	0
   746   007E1A  6E9A               	movwf	154,c	;volatile
   747   007E1C  0012               	return		;funcret
   748   007E1E                     __end_of_OSCILLATOR_Initialize:
   749                           	callstack 0
   750   000000                     
   751                           	psect	rparam
   752   000000                     
   753                           	psect	idloc
   754                           
   755                           ;Config register IDLOC0 @ 0x200000
   756                           ;	unspecified, using default values
   757   200000                     	org	2097152
   758   200000  FF                 	db	255
   759                           
   760                           ;Config register IDLOC1 @ 0x200001
   761                           ;	unspecified, using default values
   762   200001                     	org	2097153
   763   200001  FF                 	db	255
   764                           
   765                           ;Config register IDLOC2 @ 0x200002
   766                           ;	unspecified, using default values
   767   200002                     	org	2097154
   768   200002  FF                 	db	255
   769                           
   770                           ;Config register IDLOC3 @ 0x200003
   771                           ;	unspecified, using default values
   772   200003                     	org	2097155
   773   200003  FF                 	db	255
   774                           
   775                           ;Config register IDLOC4 @ 0x200004
   776                           ;	unspecified, using default values
   777   200004                     	org	2097156
   778   200004  FF                 	db	255
   779                           
   780                           ;Config register IDLOC5 @ 0x200005
   781                           ;	unspecified, using default values
   782   200005                     	org	2097157
   783   200005  FF                 	db	255
   784                           
   785                           ;Config register IDLOC6 @ 0x200006
   786                           ;	unspecified, using default values
   787   200006                     	org	2097158
   788   200006  FF                 	db	255
   789                           
   790                           ;Config register IDLOC7 @ 0x200007
   791                           ;	unspecified, using default values
   792   200007                     	org	2097159
   793   200007  FF                 	db	255
   794                           
   795                           	psect	config
   796                           
   797                           ;Config register CONFIG1L @ 0x300000
   798                           ;	VREG Sleep Enable bit
   799                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
   800                           ;	LF-INTOSC Low-power Enable bit
   801                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
   802                           ;	SOSC Power Selection and mode Configuration bits
   803                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
   804                           ;	Extended Instruction Set
   805                           ;	XINST = OFF, Disabled
   806   300000                     	org	3145728
   807   300000  15                 	db	21
   808                           
   809                           ;Config register CONFIG1H @ 0x300001
   810                           ;	Oscillator
   811                           ;	FOSC = HS2, HS oscillator (High power, 16 MHz - 25 MHz)
   812                           ;	PLL x4 Enable bit
   813                           ;	PLLCFG = OFF, Disabled
   814                           ;	Fail-Safe Clock Monitor
   815                           ;	FCMEN = OFF, Disabled
   816                           ;	Internal External Oscillator Switch Over Mode
   817                           ;	IESO = OFF, Disabled
   818   300001                     	org	3145729
   819   300001  02                 	db	2
   820                           
   821                           ;Config register CONFIG2L @ 0x300002
   822                           ;	Power Up Timer
   823                           ;	PWRTEN = OFF, Disabled
   824                           ;	Brown Out Detect
   825                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
   826                           ;	Brown-out Reset Voltage bits
   827                           ;	BORV = 3, 1.8V
   828                           ;	BORMV Power level
   829                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
   830   300002                     	org	3145730
   831   300002  7F                 	db	127
   832                           
   833                           ;Config register CONFIG2H @ 0x300003
   834                           ;	Watchdog Timer
   835                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
   836                           ;	Watchdog Postscaler
   837                           ;	WDTPS = 1048576, 1:1048576
   838   300003                     	org	3145731
   839   300003  7C                 	db	124
   840                           
   841                           ; Padding undefined space
   842   300004                     	org	3145732
   843   300004  FF                 	db	255
   844                           
   845                           ;Config register CONFIG3H @ 0x300005
   846                           ;	ECAN Mux bit
   847                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
   848                           ;	MSSP address masking
   849                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
   850                           ;	Master Clear Enable
   851                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
   852   300005                     	org	3145733
   853   300005  89                 	db	137
   854                           
   855                           ;Config register CONFIG4L @ 0x300006
   856                           ;	Stack Overflow Reset
   857                           ;	STVREN = ON, Enabled
   858                           ;	Boot Block Size
   859                           ;	BBSIZ = BB2K, 2K word Boot Block size
   860   300006                     	org	3145734
   861   300006  91                 	db	145
   862                           
   863                           ; Padding undefined space
   864   300007                     	org	3145735
   865   300007  FF                 	db	255
   866                           
   867                           ;Config register CONFIG5L @ 0x300008
   868                           ;	Code Protect 00800-01FFF
   869                           ;	CP0 = OFF, Disabled
   870                           ;	Code Protect 02000-03FFF
   871                           ;	CP1 = OFF, Disabled
   872                           ;	Code Protect 04000-05FFF
   873                           ;	CP2 = OFF, Disabled
   874                           ;	Code Protect 06000-07FFF
   875                           ;	CP3 = OFF, Disabled
   876   300008                     	org	3145736
   877   300008  0F                 	db	15
   878                           
   879                           ;Config register CONFIG5H @ 0x300009
   880                           ;	Code Protect Boot
   881                           ;	CPB = OFF, Disabled
   882                           ;	Data EE Read Protect
   883                           ;	CPD = OFF, Disabled
   884   300009                     	org	3145737
   885   300009  C0                 	db	192
   886                           
   887                           ;Config register CONFIG6L @ 0x30000A
   888                           ;	Table Write Protect 00800-01FFF
   889                           ;	WRT0 = OFF, Disabled
   890                           ;	Table Write Protect 02000-03FFF
   891                           ;	WRT1 = OFF, Disabled
   892                           ;	Table Write Protect 04000-05FFF
   893                           ;	WRT2 = OFF, Disabled
   894                           ;	Table Write Protect 06000-07FFF
   895                           ;	WRT3 = OFF, Disabled
   896   30000A                     	org	3145738
   897   30000A  0F                 	db	15
   898                           
   899                           ;Config register CONFIG6H @ 0x30000B
   900                           ;	Config. Write Protect
   901                           ;	WRTC = OFF, Disabled
   902                           ;	Table Write Protect Boot
   903                           ;	WRTB = OFF, Disabled
   904                           ;	Data EE Write Protect
   905                           ;	WRTD = OFF, Disabled
   906   30000B                     	org	3145739
   907   30000B  E0                 	db	224
   908                           
   909                           ;Config register CONFIG7L @ 0x30000C
   910                           ;	Table Read Protect 00800-01FFF
   911                           ;	EBTR0 = OFF, Disabled
   912                           ;	Table Read Protect 02000-03FFF
   913                           ;	EBTR1 = OFF, Disabled
   914                           ;	Table Read Protect 04000-05FFF
   915                           ;	EBTR2 = OFF, Disabled
   916                           ;	Table Read Protect 06000-07FFF
   917                           ;	EBTR3 = OFF, Disabled
   918   30000C                     	org	3145740
   919   30000C  0F                 	db	15
   920                           
   921                           ;Config register CONFIG7H @ 0x30000D
   922                           ;	Table Read Protect Boot
   923                           ;	EBTRB = OFF, Disabled
   924   30000D                     	org	3145741
   925   30000D  40                 	db	64
   926                           tosu	equ	0xFFF
   927                           tosh	equ	0xFFE
   928                           tosl	equ	0xFFD
   929                           stkptr	equ	0xFFC
   930                           pclatu	equ	0xFFB
   931                           pclath	equ	0xFFA
   932                           pcl	equ	0xFF9
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           prodh	equ	0xFF4
   938                           prodl	equ	0xFF3
   939                           indf0	equ	0xFEF
   940                           postinc0	equ	0xFEE
   941                           postdec0	equ	0xFED
   942                           preinc0	equ	0xFEC
   943                           plusw0	equ	0xFEB
   944                           fsr0h	equ	0xFEA
   945                           fsr0l	equ	0xFE9
   946                           wreg	equ	0xFE8
   947                           indf1	equ	0xFE7
   948                           postinc1	equ	0xFE6
   949                           postdec1	equ	0xFE5
   950                           preinc1	equ	0xFE4
   951                           plusw1	equ	0xFE3
   952                           fsr1h	equ	0xFE2
   953                           fsr1l	equ	0xFE1
   954                           bsr	equ	0xFE0
   955                           indf2	equ	0xFDF
   956                           postinc2	equ	0xFDE
   957                           postdec2	equ	0xFDD
   958                           preinc2	equ	0xFDC
   959                           plusw2	equ	0xFDB
   960                           fsr2h	equ	0xFDA
   961                           fsr2l	equ	0xFD9
   962                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK10          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_cligne

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     266
                                              6 COMRAM     4     4      0
                  _SYSTEM_Initialize
                          _afficheur
                             _cligne
 ---------------------------------------------------------------------------------
 (1) _cligne                                               6     4      2     122
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _afficheur                                            4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _afficheur
   _cligne

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      11A      0       0      30        0.0%
BITBANK13          100      0       0      40        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      39        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      38        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      36        0.0%
BANK10             100      0       0      37        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      35        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      34        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      33        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      32        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       C       1       12.6%
BITBANK14           41      0       0      41        0.0%
BANK14              41      0       0      42        0.0%
BITBIGSFRlh         36      0       0      25        0.0%
BITBIGSFRlllhl      23      0       0      29        0.0%
BITBIGSFRhl         1D      0       0      24        0.0%
BITBIGSFRhh          D      0       0      23        0.0%
BITBIGSFRlllhh       6      0       0      28        0.0%
BITBIGSFRllhl        6      0       0      27        0.0%
BITBIGSFRllhh        5      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      31        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Aug 29 01:44:16 2023

                            l15 7DFC                              l18 7E1C                              l43 7E44  
                            l80 7E86                              l81 7E52                              l74 7FF8  
                            l83 7E9C                              l98 7EA2                              u70 7E9C  
                            u71 7E98                              u80 7F5E                              u81 7F5A  
                            u90 7F70                              u91 7F6C                             l100 7EAE  
                           l101 7EBA                             l102 7EC6                             l103 7ED2  
                           l104 7EDE                             l105 7F36                             l800 7DF4  
                           l902 7EEA                             l910 7F3C                             l920 7F7C  
                           l912 7F44                             l930 7FCC                             l922 7F80  
                           l914 7F50                             l932 7FD0                             l924 7F9C  
                           l916 7F5E                             l908 7F38                             l926 7FA4  
                           l918 7F70                             l934 7FEC                             l792 7E1E  
                           l928 7FBA                             l794 7E2E                             l890 7E46  
                           l796 7E42                             l956 7F00                             l892 7E54  
                           l798 7E0C                             l894 7E6A                             l896 7E82  
                           l898 7E9E                             u100 7F9C                             u101 7F98  
                           u110 7FCC                             u111 7FC8                             u127 7FAE  
                           u137 7FDA                             u147 7E5E                             u157 7E76  
                           wreg 0FE8                            _LATA 0F89                            _LATB 0F8A  
                          _LATC 0F8B                            _WPUB 0F5B                            _main 7F38  
                          start 0000                    ___param_bank 0000   __end_of_OSCILLATOR_Initialize 7E1E  
                         ?_main 0001                    main@maintien 0009                           _TRISA 0F92  
                         _TRISB 0F93                           _TRISC 0F94                           status 0FD8  
               __initialization 7DFE                    __end_of_main 8000                          ??_main 0007  
                 __activetblptr 0002                          _ANCON0 0F5D                          _ANCON1 0F5C  
                        _OSCCON 0FD3                          _cligne 7E46                          isa$std 0001  
                        tblptru 0FF8               _SYSTEM_Initialize 7DF4                      __accesstop 0060  
       __end_of__initialization 7E02              ?_SYSTEM_Initialize 0001                   ___rparam_used 0001  
                __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 0001       __end_of_SYSTEM_Initialize 7DFE  
                       ?_cligne 0001                         _REFOCON 0F9A                         _OSCCON2 0FD2  
                       _OSCTUNE 0F9B               __end_of_afficheur 7F38                         __Hparam 0000  
                       __Lparam 0000                         __pcinit 7DFE                         __ramtop 1000  
                       __ptext0 7F38                         __ptext1 7E46                         __ptext2 7E9E  
                       __ptext3 7DF4                         __ptext4 7E1E                         __ptext5 7E0C  
         _OSCILLATOR_Initialize 7E0C        ??_PIN_MANAGER_Initialize 0001                         cligne@i 0005  
          end_of_initialization 7E02                   __Lmediumconst 0000                       _PORTBbits 0F81  
                     _PORTCbits 0F82                  __end_of_cligne 7E9E          ?_OSCILLATOR_Initialize 0001  
           start_initialization 7DFE                        ??_cligne 0003                     __pbssCOMRAM 000B  
                     _afficheur 7E9E           afficheur@var_compteur 0001          _PIN_MANAGER_Initialize 7E1E  
                    ?_afficheur 0001                        _LATAbits 0F89                        _LATCbits 0F8B  
                   _INTCON2bits 0FF1                        __Hrparam 0000                        __Lrparam 0000  
       ??_OSCILLATOR_Initialize 0001                     ??_afficheur 0003                        cligne@nb 0001  
                      isa$xinst 0000                    _var_compteur 000B                      _INTCONbits 0FF2  
       ?_PIN_MANAGER_Initialize 0001  __end_of_PIN_MANAGER_Initialize 7E46  
